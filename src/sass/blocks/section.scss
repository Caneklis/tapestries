.section {
  // min-height: 100vh;

  width: 100%;
  max-width: 1920px;
  margin: 0 auto;
  background-color: $s-color;
  color: $m-color;

  &--hero {
    display: grid;
    grid-template-columns: 60% 40%;
    height: 100vh;
    padding-left: 40px;
  }

  &--zoom-in-image {
    height: 100vh;
    display: grid;
    place-content: center;
    padding: 0 1rem;
  }

  &--text-right {
    min-height: 100vh;
    display: grid;
    grid-template-columns: 30% 60%;
    column-gap: 10%;
    position: relative;
    background-color: $m-color;
    color: $s-color;
    background-image: repeating-linear-gradient(
        150deg,
        rgba(255, 255, 255, 0.05),
        rgba(255, 255, 255, 0.05) 1px,
        transparent 0,
        transparent 41px
      ),
      repeating-linear-gradient(
        -150deg,
        rgba(255, 255, 255, 0.05),
        rgba(255, 255, 255, 0.05) 1px,
        transparent 0,
        transparent 41px
      );
    background-size: 82px 47px;
    overflow-y: hidden;
  }

  &--text-left {
    min-height: 100vh;
    display: grid;
    margin-top: -35px;
    grid-template-columns: 60% 30%;
    column-gap: 10%;
    position: relative;
    background-color: $m-color;
    color: $s-color;
    // background-color: $s-color;
    // color: $m-color;
    background-image: repeating-linear-gradient(
        150deg,
        rgba(255, 255, 255, 0.05),
        rgba(255, 255, 255, 0.05) 1px,
        transparent 0,
        transparent 41px
      ),
      repeating-linear-gradient(
        -150deg,
        rgba(255, 255, 255, 0.05),
        rgba(255, 255, 255, 0.05) 1px,
        transparent 0,
        transparent 41px
      );

    .copy {
      padding-left: 40px;
    }
  }

  &--deepzoom {
    height: calc(300vh + 32px + 16px);
    display: grid;
    grid-template-columns: 1fr 2fr;
    grid-template-columns: 40% 60%;
    padding-bottom: 20px;

    blockquote {
      align-self: center;
      margin: auto;
      font-size: 5vmin;
      padding-top: 150px;
      padding-left: 40px;
      // padding: 16px 16px 0 16px;

      cite {
        display: block;
      }
    }

    .images-container {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      padding: 0 8px;
      gap: 8px;
      margin-top: 16px;

      img {
        width: 100%;
        max-height: 75vh;
        height: 100%;
        align-self: stretch;
        object-fit: cover;
      }
    }
  }
}

.section__text {
  padding-top: 120px;
  padding-left: 40px;
  padding-right: 40px;
  font-size: 40px;

  &--no-padding {
    padding: 0;
  }

  blockquote {
    margin: 0;
    margin-bottom: 20px;
    color: $m-color;
    font-family: $s-font;
    font-style: italic;
    font-size: 50px;
  }

  p {
    margin: 0;
    margin-bottom: 20px;
  }
}

.section__nav {
  margin: 0;
  font-size: 30px;

  a {
    color: inherit;
  }
}

.section__main-title {
  margin: 0;
  margin-bottom: 40px;
  font-size: 80px;
  font-weight: 400;
  font-family: $s-font;
  text-align: center;
}

.section__subtitle {
  margin: 0;
  margin-bottom: 40px;
  font-size: 30px;
  font-weight: 400;
  text-align: center;
}

.section__image-mask {
  width: 90vw;
  height: 90vh;
  background: url("https://firebasestorage.googleapis.com/v0/b/hashnode-tutorials.appspot.com/o/bwimages%2Ftumblr_n92tblyC8d1s3sziio1_1280.jpg?alt=media&token=c5d75884-4bc3-46bb-815d-414d2ec68e4b");
  // background-attachment: fixed;
  background-size: contain;
  background-position-x: 50%;
  background-position-y: 50%;
  background-size: 80%;
  background-repeat: no-repeat;

  img {
    height: 100%;
    width: 100%;
    object-fit: cover;
  }
}

.section__image-wrapper {
  height: 100vh;
  width: 100%;

  img {
    height: 100%;
    width: 100%;
    object-fit: cover;
  }
}

.section__nav-item {
  a {
    position: relative;
    display: inline-flex;
    align-items: center;
    gap: 10px;
    padding-bottom: 5px;

    &::after {
      content: "";
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      display: block;
      height: 2px;
      background-color: $m-color;
      transform: scaleX(0);
      transition: $transition;
    }
    &:hover {
      &::after {
        transform: scaleX(1);
      }
    }
  }
}
